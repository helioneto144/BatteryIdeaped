#!/usr/bin/env python3
"""
Teste simples para verificar funcionalidade do modo de conserva√ß√£o
"""

import subprocess
import sys
from pathlib import Path

def test_conservation_mode():
    conservation_path = "/sys/bus/platform/drivers/ideapad_acpi/VPC2004:00/conservation_mode"
    
    print("=== Teste do Modo de Conserva√ß√£o da Bateria ===")
    print()
    
    # Verificar se o arquivo existe
    if not Path(conservation_path).exists():
        print("‚ùå ERRO: Arquivo de controle n√£o encontrado")
        print(f"   Caminho: {conservation_path}")
        return False
    
    print("‚úÖ Arquivo de controle encontrado")
    
    # Ler status atual
    try:
        with open(conservation_path, 'r') as f:
            current_status = f.read().strip()
        
        print(f"üìä Status atual: {current_status}")
        
        if current_status == "1":
            print("   ‚Üí Modo conserva√ß√£o LIGADO (bateria limitada a ~60%)")
        elif current_status == "0":
            print("   ‚Üí Modo conserva√ß√£o DESLIGADO (carga normal at√© 100%)")
        else:
            print(f"   ‚Üí Status desconhecido: {current_status}")
        
    except Exception as e:
        print(f"‚ùå ERRO ao ler status: {e}")
        return False
    
    # Verificar se pkexec est√° dispon√≠vel
    try:
        result = subprocess.run(['which', 'pkexec'], capture_output=True, text=True)
        if result.returncode == 0:
            print("‚úÖ pkexec dispon√≠vel para eleva√ß√£o de privil√©gios")
        else:
            print("‚ö†Ô∏è  pkexec n√£o encontrado - ser√° necess√°rio para alterar o modo")
    except Exception:
        print("‚ö†Ô∏è  N√£o foi poss√≠vel verificar pkexec")
    
    print()
    print("=== Teste Conclu√≠do ===")
    print()
    print("Para usar o programa:")
    print("1. Execute: python3 battery_conservation.py")
    print("2. Ou instale com: ./install.sh")
    print()
    
    return True

if __name__ == "__main__":
    test_conservation_mode()
